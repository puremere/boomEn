//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace banimo.com.payamakpanel.api.voice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VoiceSoap", Namespace="http://tempuri.org/")]
    public partial class Voice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSMSWithSpeechTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSWithSpeechTextBySchduleDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendSMSWithSpeechTextStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Voice() {
            this.Url = global::banimo.Properties.Settings.Default.banimo_com_payamakpanel_api_voice_Voice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSWithSpeechTextCompletedEventHandler SendSMSWithSpeechTextCompleted;
        
        /// <remarks/>
        public event SendSMSWithSpeechTextBySchduleDateCompletedEventHandler SendSMSWithSpeechTextBySchduleDateCompleted;
        
        /// <remarks/>
        public event GetSendSMSWithSpeechTextStatusCompletedEventHandler GetSendSMSWithSpeechTextStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSWithSpeechText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMSWithSpeechText(string username, string password, string smsBody, string speechBody, string from, string to) {
            object[] results = this.Invoke("SendSMSWithSpeechText", new object[] {
                        username,
                        password,
                        smsBody,
                        speechBody,
                        from,
                        to});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSWithSpeechTextAsync(string username, string password, string smsBody, string speechBody, string from, string to) {
            this.SendSMSWithSpeechTextAsync(username, password, smsBody, speechBody, from, to, null);
        }
        
        /// <remarks/>
        public void SendSMSWithSpeechTextAsync(string username, string password, string smsBody, string speechBody, string from, string to, object userState) {
            if ((this.SendSMSWithSpeechTextOperationCompleted == null)) {
                this.SendSMSWithSpeechTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSWithSpeechTextOperationCompleted);
            }
            this.InvokeAsync("SendSMSWithSpeechText", new object[] {
                        username,
                        password,
                        smsBody,
                        speechBody,
                        from,
                        to}, this.SendSMSWithSpeechTextOperationCompleted, userState);
        }
        
        private void OnSendSMSWithSpeechTextOperationCompleted(object arg) {
            if ((this.SendSMSWithSpeechTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSWithSpeechTextCompleted(this, new SendSMSWithSpeechTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSWithSpeechTextBySchduleDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMSWithSpeechTextBySchduleDate(string username, string password, string smsBody, string speechBody, string from, string to, System.DateTime scheduleDate) {
            object[] results = this.Invoke("SendSMSWithSpeechTextBySchduleDate", new object[] {
                        username,
                        password,
                        smsBody,
                        speechBody,
                        from,
                        to,
                        scheduleDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSWithSpeechTextBySchduleDateAsync(string username, string password, string smsBody, string speechBody, string from, string to, System.DateTime scheduleDate) {
            this.SendSMSWithSpeechTextBySchduleDateAsync(username, password, smsBody, speechBody, from, to, scheduleDate, null);
        }
        
        /// <remarks/>
        public void SendSMSWithSpeechTextBySchduleDateAsync(string username, string password, string smsBody, string speechBody, string from, string to, System.DateTime scheduleDate, object userState) {
            if ((this.SendSMSWithSpeechTextBySchduleDateOperationCompleted == null)) {
                this.SendSMSWithSpeechTextBySchduleDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSWithSpeechTextBySchduleDateOperationCompleted);
            }
            this.InvokeAsync("SendSMSWithSpeechTextBySchduleDate", new object[] {
                        username,
                        password,
                        smsBody,
                        speechBody,
                        from,
                        to,
                        scheduleDate}, this.SendSMSWithSpeechTextBySchduleDateOperationCompleted, userState);
        }
        
        private void OnSendSMSWithSpeechTextBySchduleDateOperationCompleted(object arg) {
            if ((this.SendSMSWithSpeechTextBySchduleDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSWithSpeechTextBySchduleDateCompleted(this, new SendSMSWithSpeechTextBySchduleDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSendSMSWithSpeechTextStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoSpeechTextList GetSendSMSWithSpeechTextStatus(string username, string password, long recId) {
            object[] results = this.Invoke("GetSendSMSWithSpeechTextStatus", new object[] {
                        username,
                        password,
                        recId});
            return ((AutoSpeechTextList)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendSMSWithSpeechTextStatusAsync(string username, string password, long recId) {
            this.GetSendSMSWithSpeechTextStatusAsync(username, password, recId, null);
        }
        
        /// <remarks/>
        public void GetSendSMSWithSpeechTextStatusAsync(string username, string password, long recId, object userState) {
            if ((this.GetSendSMSWithSpeechTextStatusOperationCompleted == null)) {
                this.GetSendSMSWithSpeechTextStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendSMSWithSpeechTextStatusOperationCompleted);
            }
            this.InvokeAsync("GetSendSMSWithSpeechTextStatus", new object[] {
                        username,
                        password,
                        recId}, this.GetSendSMSWithSpeechTextStatusOperationCompleted, userState);
        }
        
        private void OnGetSendSMSWithSpeechTextStatusOperationCompleted(object arg) {
            if ((this.GetSendSMSWithSpeechTextStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendSMSWithSpeechTextStatusCompleted(this, new GetSendSMSWithSpeechTextStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AutoSpeechTextList {
        
        private string speechBodyField;
        
        private string sMSBodyField;
        
        private string phoneNumberField;
        
        private string sMSSenderNumberField;
        
        private long sMSRecIDField;
        
        private int sMSDeliveryStatusField;
        
        private int voiceDeliveryStatusField;
        
        private int repeatVoiceField;
        
        private System.DateTime insertDateField;
        
        private byte reqStatusField;
        
        /// <remarks/>
        public string SpeechBody {
            get {
                return this.speechBodyField;
            }
            set {
                this.speechBodyField = value;
            }
        }
        
        /// <remarks/>
        public string SMSBody {
            get {
                return this.sMSBodyField;
            }
            set {
                this.sMSBodyField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SMSSenderNumber {
            get {
                return this.sMSSenderNumberField;
            }
            set {
                this.sMSSenderNumberField = value;
            }
        }
        
        /// <remarks/>
        public long SMSRecID {
            get {
                return this.sMSRecIDField;
            }
            set {
                this.sMSRecIDField = value;
            }
        }
        
        /// <remarks/>
        public int SMSDeliveryStatus {
            get {
                return this.sMSDeliveryStatusField;
            }
            set {
                this.sMSDeliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public int VoiceDeliveryStatus {
            get {
                return this.voiceDeliveryStatusField;
            }
            set {
                this.voiceDeliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public int RepeatVoice {
            get {
                return this.repeatVoiceField;
            }
            set {
                this.repeatVoiceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
            }
        }
        
        /// <remarks/>
        public byte ReqStatus {
            get {
                return this.reqStatusField;
            }
            set {
                this.reqStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSMSWithSpeechTextCompletedEventHandler(object sender, SendSMSWithSpeechTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSWithSpeechTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSWithSpeechTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSMSWithSpeechTextBySchduleDateCompletedEventHandler(object sender, SendSMSWithSpeechTextBySchduleDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSWithSpeechTextBySchduleDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSWithSpeechTextBySchduleDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSendSMSWithSpeechTextStatusCompletedEventHandler(object sender, GetSendSMSWithSpeechTextStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendSMSWithSpeechTextStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendSMSWithSpeechTextStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoSpeechTextList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoSpeechTextList)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591